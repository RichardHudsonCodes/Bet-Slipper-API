{"ast":null,"code":"var _jsxFileName = \"/Users/richardhudson/Projects/Bet-Slipper-API/Bet-Slipper-FrontEnd/ClientApp/src/components/BetSlipRow.js\",\n    _s = $RefreshSig$();\n\nimport { Form } from \"reactstrap\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateRow() {\n  _s();\n\n  const [inputFields, setInputFields] = useState([{\n    bet: '',\n    market: '',\n    actualOdds: '',\n    minOdds: ''\n  }]);\n\n  const handleFormChange = (index, event) => {\n    let data = [...inputFields];\n    data[index][event.target.name] = event.target.value;\n    setInputFields(data);\n  };\n\n  const addRow = () => {\n    let newfield = {\n      bet: '',\n      market: '',\n      actualOdds: '',\n      minOdds: ''\n    };\n    setInputFields([...inputFields, newfield]);\n\n    const removeRow = () => {\n      let data = [...inputFields];\n      data.splice(index, 1);\n      setInputFields(data);\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      children: inputFields.map((input, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Bet\", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"bet\",\n              placeholder: \"Bet\",\n              value: input.bet,\n              onChange: event => handleFormChange(index, event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Market\", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"market\",\n              placeholder: \"Market\",\n              value: input.market,\n              onChange: event => handleFormChange(index, event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Actual Odds\", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"actualOdds\",\n              placeholder: \"Actual Odds\",\n              value: input.actualOdds,\n              onChange: event => handleFormChange(index, event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Minimum Odds\", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"minOdds\",\n              placeholder: \"Minimum Odds\",\n              value: input.minOdds,\n              onChange: event => handleFormChange(index, event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeRow(index),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 16\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addRow,\n      children: \"Add Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateRow, \"DmpKHj1aPGOb8IuaAVyn5QqUrRo=\");\n\n_c = CreateRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRow\");","map":{"version":3,"names":["Form","React","useState","CreateRow","inputFields","setInputFields","bet","market","actualOdds","minOdds","handleFormChange","index","event","data","target","name","value","addRow","newfield","removeRow","splice","map","input"],"sources":["/Users/richardhudson/Projects/Bet-Slipper-API/Bet-Slipper-FrontEnd/ClientApp/src/components/BetSlipRow.js"],"sourcesContent":["import { Form } from \"reactstrap\"\nimport React, { useState } from \"react\"\n\nexport default function CreateRow (){\n\n    const[inputFields, setInputFields] = useState([\n       {\n           bet:'', \n           market:'',\n           actualOdds:'',\n           minOdds:''\n       }\n   ])\n\n   const handleFormChange = (index, event) => {\n        let data = [...inputFields];\n        data[index][event.target.name] = event.target.value;\n        setInputFields(data);\n   }\n   \n    const addRow = () => {\n    let newfield = {bet:'', \n    market:'',\n    actualOdds:'',\n    minOdds:'' }\n    setInputFields([...inputFields, newfield])\n\n    const removeRow = () => {\n        let data = [...inputFields];\n        data.splice(index, 1)\n        setInputFields(data)\n\n    }\n}\n   return(\n    <div>\n    <Form>\n       {inputFields.map((input, index) => \n           { \n               return( <div key={index}>\n               <label>Bet\n                   <input name=\"bet\" \n                   placeholder=\"Bet\" \n                   value={input.bet}\n                   onChange={event => handleFormChange(index, event)}> \n                   </input>\n               </label>\n               <label>Market\n                   <input name=\"market\" \n                   placeholder=\"Market\" \n                   value={input.market}\n                   onChange={event => handleFormChange(index, event)}>\n                   </input>\n               </label>\n               <label>Actual Odds\n                   <input name=\"actualOdds\" \n                   placeholder=\"Actual Odds\" \n                   value={input.actualOdds}\n                   onChange={event => handleFormChange(index, event)}>\n                   </input>\n               </label>\n               <label>Minimum Odds\n                   <input name=\"minOdds\" \n                   placeholder=\"Minimum Odds\" \n                   value={input.minOdds}\n                   onChange={event => handleFormChange(index, event)}>\n                   </input>\n               </label>\n               <button onClick={() => removeRow(index)}>Remove</button>\n            </div>)\n            }\n       )}\n   </Form>\n    <button onClick={addRow}>Add Row</button>\n    </div>\n   )\n   \n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}