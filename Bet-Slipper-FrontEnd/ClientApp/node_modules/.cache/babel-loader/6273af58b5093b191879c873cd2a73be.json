{"ast":null,"code":"var _jsxFileName = \"/Users/richardhudson/Projects/Bet-Slipper-API/Bet-Slipper-FrontEnd/ClientApp/src/components/BetSlipRow.js\",\n    _s = $RefreshSig$();\n\nimport { Form } from \"reactstrap\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateRow() {\n  _s();\n\n  const [inputFields, setInputFields] = useState([{\n    bet: '',\n    market: '',\n    actualOdds: '',\n    minOdds: ''\n  }]);\n\n  const handleFormChange = (index, event) => {\n    let data = [...inputFields];\n    data[index][event.target.name] = event.target.value;\n    setInputFields(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: inputFields.map((input, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Bet\", /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"Bet\",\n            placeholder: \"Bet\",\n            value: input.bet,\n            onChange: event => handleFormChange(index, event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Market\", /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"Market\",\n            placeholder: \"Market\",\n            value: input.market,\n            onChange: event => handleFormChange(index, event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Actual Odds\", /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"Actual Odds\",\n            placeholder: \"Actual Odds\",\n            value: input.actualOdds,\n            onChange: event => handleFormChange(index, event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Minimum Odds\", /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"Minimum Odds\",\n            placeholder: \"Minimum Odds\",\n            value: input.minOdds,\n            onChange: event => handleFormChange(index, event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 16\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateRow, \"DmpKHj1aPGOb8IuaAVyn5QqUrRo=\");\n\n_c = CreateRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRow\");","map":{"version":3,"names":["Form","React","useState","CreateRow","inputFields","setInputFields","bet","market","actualOdds","minOdds","handleFormChange","index","event","data","target","name","value","map","input"],"sources":["/Users/richardhudson/Projects/Bet-Slipper-API/Bet-Slipper-FrontEnd/ClientApp/src/components/BetSlipRow.js"],"sourcesContent":["import { Form } from \"reactstrap\"\nimport React, { useState } from \"react\"\n\nexport default function CreateRow (){\n\n    const[inputFields, setInputFields] = useState([\n       {\n           bet:'', \n           market:'',\n           actualOdds:'',\n           minOdds:''\n       }\n   ])\n\n   const handleFormChange = (index, event) => {\n        let data = [...inputFields];\n        data[index][event.target.name] = event.target.value;\n        setInputFields(data);\n   }\n\n   return(\n    <Form>\n       {inputFields.map((input, index) => \n           { \n               return( <div key={index}>\n               <label>Bet\n                   <input name=\"Bet\" \n                   placeholder=\"Bet\" \n                   value={input.bet}\n                   onChange={event => handleFormChange(index, event)}>\n                      \n                   </input>\n               </label>\n               <label>Market\n                   <input name=\"Market\" \n                   placeholder=\"Market\" \n                   value={input.market}\n                   onChange={event => handleFormChange(index, event)}>\n                   </input>\n               </label>\n               <label>Actual Odds\n                   <input name=\"Actual Odds\" \n                   placeholder=\"Actual Odds\" \n                   value={input.actualOdds}\n                   onChange={event => handleFormChange(index, event)}>\n                   </input>\n               </label>\n               <label>Minimum Odds\n                   <input name=\"Minimum Odds\" \n                   placeholder=\"Minimum Odds\" \n                   value={input.minOdds}\n                   onChange={event => handleFormChange(index, event)}>\n                   </input>\n               </label>\n            </div>)\n            }\n       )}\n   </Form>)\n   \n}"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,YAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,SAAT,GAAqB;EAAA;;EAEhC,MAAK,CAACC,WAAD,EAAcC,cAAd,IAAgCH,QAAQ,CAAC,CAC3C;IACII,GAAG,EAAC,EADR;IAEIC,MAAM,EAAC,EAFX;IAGIC,UAAU,EAAC,EAHf;IAIIC,OAAO,EAAC;EAJZ,CAD2C,CAAD,CAA7C;;EASD,MAAMC,gBAAgB,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;IACtC,IAAIC,IAAI,GAAG,CAAC,GAAGT,WAAJ,CAAX;IACAS,IAAI,CAACF,KAAD,CAAJ,CAAYC,KAAK,CAACE,MAAN,CAAaC,IAAzB,IAAiCH,KAAK,CAACE,MAAN,CAAaE,KAA9C;IACAX,cAAc,CAACQ,IAAD,CAAd;EACJ,CAJD;;EAMA,oBACC,QAAC,IAAD;IAAA,UACIT,WAAW,CAACa,GAAZ,CAAgB,CAACC,KAAD,EAAQP,KAAR,KACb;MACI,oBAAQ;QAAA,wBACR;UAAA,+BACI;YAAO,IAAI,EAAC,KAAZ;YACA,WAAW,EAAC,KADZ;YAEA,KAAK,EAAEO,KAAK,CAACZ,GAFb;YAGA,QAAQ,EAAEM,KAAK,IAAIF,gBAAgB,CAACC,KAAD,EAAQC,KAAR;UAHnC;YAAA;YAAA;YAAA;UAAA,QADJ;QAAA;UAAA;UAAA;UAAA;QAAA,QADQ,eASR;UAAA,kCACI;YAAO,IAAI,EAAC,QAAZ;YACA,WAAW,EAAC,QADZ;YAEA,KAAK,EAAEM,KAAK,CAACX,MAFb;YAGA,QAAQ,EAAEK,KAAK,IAAIF,gBAAgB,CAACC,KAAD,EAAQC,KAAR;UAHnC;YAAA;YAAA;YAAA;UAAA,QADJ;QAAA;UAAA;UAAA;UAAA;QAAA,QATQ,eAgBR;UAAA,uCACI;YAAO,IAAI,EAAC,aAAZ;YACA,WAAW,EAAC,aADZ;YAEA,KAAK,EAAEM,KAAK,CAACV,UAFb;YAGA,QAAQ,EAAEI,KAAK,IAAIF,gBAAgB,CAACC,KAAD,EAAQC,KAAR;UAHnC;YAAA;YAAA;YAAA;UAAA,QADJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAhBQ,eAuBR;UAAA,wCACI;YAAO,IAAI,EAAC,cAAZ;YACA,WAAW,EAAC,cADZ;YAEA,KAAK,EAAEM,KAAK,CAACT,OAFb;YAGA,QAAQ,EAAEG,KAAK,IAAIF,gBAAgB,CAACC,KAAD,EAAQC,KAAR;UAHnC;YAAA;YAAA;YAAA;UAAA,QADJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAvBQ;MAAA,GAAUD,KAAV;QAAA;QAAA;QAAA;MAAA,QAAR;IA+BF,CAjCL;EADJ;IAAA;IAAA;IAAA;EAAA,QADD;AAuCF;;GAxDuBR,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}